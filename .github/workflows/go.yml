# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Build
      run: go build -v -ldflags "-X main.version=$(git describe --tags --always --dirty)" ./...

    - name: Test
      run: go test -v ./...

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: v2.4.0

    - name: Update coverage report
      uses: ncruces/go-coverage-report@v0
      with:
        report: true
        chart: true
        amend: true
      if: |
        github.event_name == 'push'
      continue-on-error: true

    - name: Build feed-mcp binary for documentation
      run: go build -o feed-mcp-bin main.go

    - name: Generate MCP HTML Documentation
      uses: SPANDigital/mcp-server-dump@main
      with:
        server-command: './feed-mcp-bin run'
        transport: 'command'
        format: 'html'
        output-file: 'mcp-docs/index.html'
        scan-tools: 'true'
        scan-resources: 'true'
        scan-prompts: 'true'

    - name: Generate MCP JSON Documentation
      uses: SPANDigital/mcp-server-dump@main
      with:
        server-command: './feed-mcp-bin run'
        transport: 'command'
        format: 'json'
        output-file: 'mcp-docs/mcp-schema.json'
        scan-tools: 'true'
        scan-resources: 'true'
        scan-prompts: 'true'

    - name: Generate MCP Markdown Documentation
      uses: SPANDigital/mcp-server-dump@main
      with:
        server-command: './feed-mcp-bin run'
        transport: 'command'
        format: 'markdown'
        output-file: 'mcp-docs/README.md'
        scan-tools: 'true'
        scan-resources: 'true'
        scan-prompts: 'true'

    - name: Upload MCP Documentation
      uses: actions/upload-artifact@v4
      with:
        name: mcp-documentation
        path: mcp-docs/
        retention-days: 30

    - name: Deploy MCP Docs to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Copy docs to temporary location before git operations
        cp -r mcp-docs /tmp/mcp-docs-temp

        # Create or checkout gh-pages branch
        git fetch origin gh-pages:gh-pages || git checkout --orphan gh-pages
        git checkout gh-pages

        # Clean existing content
        git rm -rf . || true

        # Copy generated docs from temporary location
        cp -r /tmp/mcp-docs-temp/* .

        # Add and commit
        git add .
        git commit -m "Update MCP documentation from ${{ github.sha }}" || echo "No changes to commit"

        # Push to gh-pages
        git push origin gh-pages || echo "No changes to push"